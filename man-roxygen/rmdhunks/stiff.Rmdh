# Stiff ODEs with Jacobian Specification

Occasionally, you may come across
a
[**stiff** differential equation](https://en.wikipedia.org/wiki/Stiff_equation),
that is a differential equation that is numerically unstable and small
variations in parameters cause different solutions to the ODEs.  One
way to tackle this is to choose a stiff-solver, or hybrid stiff solver
(like the default LSODA).  Typically this is enough. However exact
Jacobian solutions may increase the stability of the ODE.  (Note the
Jacobian is the derivative of the ODE specification with respect to
each variable). In rxode2 you can specify the Jacobian with the
`df(state)/dy(variable)=` statement.  A classic ODE that has stiff
properties under various conditions is
the
[Van der Pol](http://www.ece.northwestern.edu/local-apps/matlabhelp/techdoc/math_anal/diffeq6.html) differential
equations.

In rxode2 these can be specified by the following:

```{r}
library(rxode2)

Vtpol2 <- function() {
  ini({
    mu <- 1 ## nonstiff; 10 moderately stiff; 1000 stiff
  })
  model({
    d/dt(y)       <- dy
    d/dt(dy)      <- mu*(1-y^2)*dy - y
    ## Jacobian
    df(y)/dy(dy)  <- 1
    df(dy)/dy(y)  <- -2*dy*mu*y - 1
    df(dy)/dy(dy) <- mu*(1-y^2)
    ## Initial conditions
    y(0)          <- 2
    dy(0)         <- 0
  })
}

et <- et(0, 10, length.out=200) %>%
  et(amt=0)

s1 <- Vtpol2 %>%  solve(et, method="lsoda")
print(s1)
```

While this is not stiff at mu=1, mu=1000 is a stiff system

```{r}
s2 <- Vtpol2 %>%  solve(c(mu=1000), et)
print(s2)
```

While this is easy enough to do, it is a bit tedious.  If you have
rxode2 setup appropriately, you can use the computer algebra system
sympy to calculate the Jacobian automatically.

This is done by the rxode2 option `calcJac` option:

```{r}
Vtpol <- function() {
  ini({
    mu <- 1 ## nonstiff; 10 moderately stiff; 1000 stiff
  })
  model({
    d/dt(y)       <- dy
    d/dt(dy)      <- mu*(1-y^2)*dy - y
    y(0)          <- 2
    dy(0)         <- 0
  })
}

Vtpol <- Vtpol()

# you can also use $symengineModelPrune if there is if/else blocks
# that need to be converted:
Vtpol <- rxode2(Vtpol$symengineModelNoPrune,  calcJac=TRUE)

summary(Vtpol)
```
